# The sites in this file are managed by bebop-wizard

server {
    listen 80;
    listen [::]:80;
    server_name example.com s3.example.com;

    location / {
        return 307 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name example.com;

    ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

    # Mozilla's “Intermediate” SSL configuration. See https://ssl-config.mozilla.org/#server=nginx&config=intermediate
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ecdh_curve X25519:prime256v1:secp384r1;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    # Keep in sync with https://ssl-config.mozilla.org/#server=nginx&config=intermediate
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    # Breaks forward secrecy: https://github.com/mozilla/server-side-tls/issues/135
    ssl_session_tickets off;
    # No insecure ciphers are enabled, so this allows clients to pick the most performant
    # per https://github.com/mozilla/server-side-tls/issues/260
    ssl_prefer_server_ciphers off;
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    # Don't let clients close the keep-alive connection to upstream. See the nginx blog for details:
    # https://www.nginx.com/blog/avoiding-top-10-nginx-configuration-mistakes/#no-keepalives
    proxy_set_header        "Connection" "";

    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_redirect off;
    }
}

# HTTPS server block for s3 subdomain
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name s3.example.com;

    ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

    # Mozilla's “Intermediate” SSL configuration. See https://ssl-config.mozilla.org/#server=nginx&config=intermediate
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ecdh_curve X25519:prime256v1:secp384r1;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    # Keep in sync with https://ssl-config.mozilla.org/#server=nginx&config=intermediate
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    # Breaks forward secrecy: https://github.com/mozilla/server-side-tls/issues/135
    ssl_session_tickets off;
    # No insecure ciphers are enabled, so this allows clients to pick the most performant
    # per https://github.com/mozilla/server-side-tls/issues/260
    ssl_prefer_server_ciphers off;
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    # Don't let clients close the keep-alive connection to upstream. See the nginx blog for details:
    # https://www.nginx.com/blog/avoiding-top-10-nginx-configuration-mistakes/#no-keepalives
    proxy_set_header        "Connection" "";

    # Increase client_max_body_size for large file uploads to MinIO
    client_max_body_size 1000M;

    location / {
        proxy_pass http://localhost:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_redirect off;

        # Additional headers for MinIO
        proxy_connect_timeout 300;
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
    }
}
