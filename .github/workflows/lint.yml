name: Lint
on:
  pull_request:
  # push:
  #   branches:
  #     - main

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          diff_relative: true
          files: |
            **/*.ts
            **/*.svelte
      - uses: pnpm/action-setup@v2
        with:
          version: 8.3.1
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'
      - run: |
          pnpm install --frozen-lockfile
      # Run this first to generate .svelte-kit/tsconfig.json
      - name: 'Build'
        run: |
          pnpm run build
      - name: 'Checking prettier errors'
        run: |
          if [ -z "${{ steps.changed-files.outputs.all_changed_files }}" ]
          then
            echo "no changed files to test"
          else
            pnpm run format ${{ steps.changed-files.outputs.all_changed_files }};
            git diff | head -n 100;
            git diff --name-only --exit-code
          fi
      - name: 'Checking lint errors'
        run: |
          if [ -z "${{ steps.changed-files.outputs.all_changed_files }}" ]
          then
            echo "no changed files to test"
          else
            pnpm run lint ${{ steps.changed-files.outputs.all_changed_files }};
            git diff | head -n 100;
            git diff --name-only --exit-code
          fi
      - name: 'Checking type errors'
        run: |
          pnpm run check
      - name: 'Check translation errors'
        run: |
          node scripts/check-translations.mjs

  check_branch_up_to_date:
    name: Check branch is up to date with target branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for accurate ancestry and range-diff
          ref: ${{ github.head_ref }}

      - name: Fetch target branch
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1

      - name: Check ancestry and show range-diff if needed
        run: |
          TARGET_BRANCH=origin/${{ github.event.pull_request.base.ref }}

          echo "üîç Checking if HEAD is a descendant of $TARGET_BRANCH..."

          if ! git merge-base --is-ancestor "$TARGET_BRANCH" HEAD; then
            echo "‚ùå Your branch is behind '$TARGET_BRANCH'. Please rebase it."
            echo ""
            echo "üìä Diff between the rebased and current history (range-diff):"
            git range-diff "$TARGET_BRANCH"...HEAD || echo "(range-diff failed)"

            exit 1
          fi

          echo "‚úÖ Branch is up to date with '$TARGET_BRANCH'."
